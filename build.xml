<?xml version="1.0" encoding="UTF-8"?>
<project name="saucelabs-phing" default="init" basedir="../workspace">
    <target name="init" depends="load-properties, run-check, clean-up, prepare, init-ad-hoc-tasks, generate-json-file, generate-yaml, loop-yamls"></target>

    <target name="load-properties">
        <property file="${phing.dir}/slphing.properties" />
        <property name="test.testName" value="${testname}"/>
        <property name="test.outputDir" value="${phing.dir}/tmp"/>
        <property name="test.jsonFile" value="${test.outputDir}/browsers.json"/>
        <property name="test.wdhostFile" value="${test.outputDir}/wdhost"/>
    </target>

    <target name="run-check">
        <if>
            <or>
                <not>
                    <isset property="test.behatBinLoc"/>
                </not>
                <not>
                    <isset property="test.behatYmlLoc"/>
                </not>
                <not>
                    <isset property="test.behatFeaturesLoc"/>
                </not>
            </or>
            <then>
                <fail message="Please complete the slphing.properties file."/>
            </then>
        </if>

        <if>
            <not>
                <available file="${test.behatYmlLoc}" />
            </not>
            <then>
                <fail message="Unable to find your default behat.yml file" />
            </then>
        </if>

        <if>
            <not>
                <available file="${test.behatBinLoc}"/>
            </not>
            <then>
                <fail message="Unable to find your behat application." />
            </then>
        </if>

    </target>

    <target name="clean-up">
        <delete dir="${test.outputDir}" />
        <delete dir="reports" />
    </target>

    <target name="prepare">
        <mkdir dir="${test.outputDir}" />
        <mkdir dir="reports"/>
        <mkdir dir="reports/html"/>
        <mkdir dir="reports/xml"/>
        <mkdir dir="reports/xml/junit"/>
        <touch file="${test.jsonFile}" />
        <touch file="${test.wdhostFile}" />
    </target>

    <target name="init-ad-hoc-tasks">
       <includepath classpath="${phing.dir}" />
       <taskdef name="generateYml" classname="src.task.ymlGenerator" />
       <taskdef name="updateJUnitName" classname="src.task.updateJUnitName" />
    </target>

    <target name="generate-json-file">
        <exec command="echo ${SAUCE_ONDEMAND_BROWSERS} | python -mjson.tool > ${test.jsonFile}" escape="false"/>
        <exec command="echo ${SAUCE_USER_NAME}:${SAUCE_API_KEY}@${SELENIUM_HOST}/wd/hub > ${test.wdhostFile}" escape="false"/>
    </target>

    <target name="generate-yaml">
        <loadfile file="${test.jsonFile}" property="jsonFileContent" />
        <if>
            <or>
                <equals arg1="${jsonFileContent}" arg2="No JSON object could be decoded" />
                <equals arg1="${jsonFileContent}" arg2="" />
            </or>
            <then>
                <fail message="No browser(s) were selected." />
            </then>
            <else>
                <loadfile file="${test.wdhostFile}" property="wdhostFile"/>
                <exec command="echo ${SAUCE_USER_NAME}" outputProperty="saucelabs.username" />
                <exec command="echo ${SAUCE_API_KEY}" outputProperty="saucelabs.apikey" />
                <generateYml testName="${test.testName}" jsonFile="${test.jsonFile}" outputDir="${test.outputDir}" uname="${saucelabs.username}" apikey="${saucelabs.apikey}" behatymlFile="${test.behatYmlLoc}"/>
            </else>
        </if>
    </target>

    <target name="loop-yamls">
        <foreach param="filename" absparam="absfilename" target="run-behat">
            <fileset dir="${test.outputDir}">
                <include name="*.yml"/>
            </fileset>
        </foreach>
    </target>

    <target name="run-behat">
        <copy file="${absfilename}" tofile="${filename}" overwrite="true"/>
        <php expression="preg_replace('/\\.[^.\\s]{3,4}$/', '', '${filename}')" returnProperty="newname"/>
        <exec command="${test.behatBinLoc} --config ${filename} --profile sauce ${test.behatFeaturesLoc}" passthru="true"/>
        <foreach param="xmlfile" absparam="absxmlfile" target="update-xml-name">
            <fileset dir="reports/xml/junit/${newname}">
                <include name="*.xml"/>
            </fileset>
            <property name="newName" value="${newname}"/>
        </foreach>
        <exec command="rm ${filename}"/>
    </target>

    <target name="update-xml-name">
        <echo message="Updating junit name filename = ${absxmlfile} and newName = ${newName}"/>
        <updateJUnitName fileName="${absxmlfile}" newName="${newName}"/>
    </target>
</project>
